import telebot
import config
from words import words
import random

from telebot import types

bot = telebot.TeleBot(config.TOKEN)



@bot.message_handler(commands=['start'])
def welcome(message):
    sticker_welcome = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sticker_welcome)

    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_1 = types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
    item_2 = types.KeyboardButton('üí¨ –†–∞–Ω–¥–æ–º–Ω—ã–µ —Ñ—Ä–∞–∑—ã')

    markup.add(item_1, item_2)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{0.first_name}</b>!\n–Ø - Telegram –±–æ—Ç <b>{1.first_name}</b>, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç:\n ‚Ä¢ –í—ã–¥–∞–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ, –∞ —Ç–∞–∫–∂–µ –∏–∑ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞;\n ‚Ä¢ –í—ã–≤–æ–¥–∏—Ç—å –ª—é–±—É—é —Ñ—Ä–∞–∑—É –∏–ª–∏ —Ü–∏—Ç–∞—Ç—É –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ª—é–¥–µ–π;\n–ü–æ–≥–Ω–∞–ª–∏!".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item_1 = types.InlineKeyboardButton('–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π', callback_data='none_stop')
            item_2 = types.InlineKeyboardButton('–° –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ —Ä–∞–Ω–¥–æ–º–∞ üé≤', callback_data='stop')

            markup.add(item_1, item_2)

            bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞:', reply_markup=markup)
        elif message.text == 'üí¨ –†–∞–Ω–¥–æ–º–Ω—ã–µ —Ñ—Ä–∞–∑—ã':
            #bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ–∫–∞ —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ üò≠')
            markup = types.InlineKeyboardMarkup(row_width=2)
            item_1 = types.InlineKeyboardButton('–≠–π–Ω—à—Ç–µ–π–Ω', callback_data='einshtein')
            item_2 = types.InlineKeyboardButton('–°—É–≤–æ—Ä–æ–≤', callback_data='suvorov')
            item_3 = types.InlineKeyboardButton('–õ—é–±–æ–π', callback_data='luboy')
            item_4 = types.InlineKeyboardButton('–õ–∏–Ω–∫–æ–ª—å–Ω', callback_data='lincoln')
            item_5 = types.InlineKeyboardButton('–®–µ–∫—Å–ø–∏—Ä', callback_data='shekspir')
            item_6 = types.InlineKeyboardButton('–≠–∫–∑—é–ø–µ—Ä–∏', callback_data='ekzuperi')

            markup.add(item_1, item_2, item_4, item_5, item_6, item_3)
            bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ —á—å—é —Ñ—Ä–∞–∑—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å: ', reply_markup=markup)
        elif message.text.isdigit():
            bot.send_message(message.chat.id, f'–í–∞—à–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ - {str(random.randint(1, int(message.text)))}')
        else:
            bot.send_message(message.chat.id, f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ üò≠')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'none_stop':
                bot.send_message(call.message.chat.id, f'–í–∞—à–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ - {str(random.randint(1, 10000))}')
            if call.data == 'stop':
                bot.send_message(call.message.chat.id,
                                 f'–í–≤–µ–¥–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—É –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ –≤–∏–¥–µ: \n25\n<b>–£—á—Ç–∏—Ç–µ, —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ —É–∂–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é(1)</b>',
                                 parse_mode='html')
            if call.data == 'einshtein':
                otvet = words['–≠–π–Ω—à—Ç–µ–π–Ω']
                bot.send_message(call.message.chat.id, f'–ê. –≠–π–Ω—à—Ç–µ–π–Ω –≥–æ–≤–æ—Ä–∏–ª: "{random.choice(otvet)}"')
            if call.data == 'suvorov':
                otvet = words['–°—É–≤–æ—Ä–æ–≤']
                bot.send_message(call.message.chat.id, f'–ê. –í. –°—É–≤–æ—Ä–æ–≤ –≥–æ–≤–æ—Ä–∏–ª: "{random.choice(otvet)}"')
            if call.data == 'lincoln':
                otvet = words['–õ–∏–Ω–∫–æ–ª—å–Ω']
                bot.send_message(call.message.chat.id, f'–ê. –õ–∏–Ω–∫–æ–ª—å–Ω –≥–æ–≤–æ—Ä–∏–ª: "{random.choice(otvet)}"')
            if call.data == 'shekspir':
                otvet = words['–®–µ–∫—Å–ø–∏—Ä']
                bot.send_message(call.message.chat.id, f'–í. –®–µ–∫—Å–ø–∏—Ä –≥–æ–≤–æ—Ä–∏–ª: "{random.choice(otvet)}"')
            if call.data == 'ekzuperi':
                otvet = words['–≠–∫–∑—é–ø–µ—Ä–∏']
                bot.send_message(call.message.chat.id, f'–ê–Ω—Ç—É–∞–Ω –¥–µ –°–µ–Ω—Ç-–≠–∫–∑—é–ø–µ—Ä–∏ –≥–æ–≤–æ—Ä–∏–ª: "{random.choice(otvet)}"')
            if call.data == 'luboy':
                key = random.choice(list(words.keys()))
                otvet = words[key]
                bot.send_message(call.message.chat.id, f'{key} –≥–æ–≤–æ—Ä–∏–ª: "{random.choice(otvet)}"')

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
